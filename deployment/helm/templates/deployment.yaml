apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "modularmind.fullname" . }}-backend
  labels:
    {{- include "modularmind.labels" . | nindent 4 }}
    app.kubernetes.io/component: backend
spec:
  {{- if not .Values.backend.autoscaling.enabled }}
  replicas: {{ .Values.backend.replicaCount }}
  {{- end }}
  selector:
    matchLabels:.
      {{- include "modularmind.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: backend
  template:
    metadata:
      annotations:
        {{- with .Values.backend.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/secrets: {{ include (print $.Template.BasePath "/secrets.yaml") . | sha256sum }}
      labels:
        {{- include "modularmind.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: backend
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.backend.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}-backend
          securityContext:
            {{- toYaml .Values.backend.securityContext | nindent 12 }}
          image: "{{ .Values.backend.image.repository }}:{{ .Values.backend.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.backend.image.pullPolicy }}
          env:
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: {{ include "modularmind.fullname" . }}-postgresql
                  key: username
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "modularmind.fullname" . }}-postgresql
                  key: password
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: {{ include "modularmind.fullname" . }}-postgresql
                  key: database
            - name: POSTGRES_HOST
              value: {{ include "modularmind.fullname" . }}-postgresql
            - name: POSTGRES_PORT
              value: "5432"
            - name: DATABASE_URL
              value: postgresql://$(POSTGRES_USER):$(POSTGRES_PASSWORD)@$(POSTGRES_HOST):$(POSTGRES_PORT)/$(POSTGRES_DB)
            
            - name: REDIS_HOST
              value: {{ include "modularmind.fullname" . }}-redis-master
            - name: REDIS_PORT
              value: "6379"
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "modularmind.fullname" . }}-redis
                  key: redis-password
            
            - name: VECTOR_DB_URL
              value: http://{{ include "modularmind.fullname" . }}-qdrant:6333
            
            - name: LLM_API_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ include "modularmind.fullname" . }}-secrets
                  key: llm-api-key
            
            - name: SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ include "modularmind.fullname" . }}-secrets
                  key: secret-key
            
            - name: SERVER__HOST
              value: "0.0.0.0"
            - name: SERVER__PORT
              value: "8000"
            - name: SERVER__ENVIRONMENT
              value: {{ .Values.global.environment }}
            
            - name: SECURITY__CORS_ORIGINS
              value: "{{ join "," .Values.backend.config.security.corsOrigins }}"
            
            - name: LLM__PROVIDER
              value: {{ .Values.backend.config.llm.provider }}
            - name: LLM__MODEL
              value: {{ .Values.backend.config.llm.model }}
            
            - name: AGENTS__ACTIVE_AGENTS
              value: {{ .Values.backend.config.agents.active | toJson | quote }}
            
            - name: ENRICHMENT__ENABLED
              value: {{ .Values.backend.config.enrichment.enabled | quote }}
            - name: ENRICHMENT__SYNTHETIC_QA__ENABLED
              value: {{ .Values.backend.config.enrichment.syntheticQA.enabled | quote }}
            
            - name: MULTILINGUAL__DEFAULT_LANGUAGE
              value: {{ .Values.backend.config.multilingual.defaultLanguage }}
            - name: MULTILINGUAL__SUPPORTED_LANGUAGES
              value: {{ .Values.backend.config.multilingual.supported | toJson | quote }}
            
            - name: METRICS_ENABLED
              value: "true"
            - name: PROMETHEUS_MULTIPROC_DIR
              value: "/tmp"
          
          ports:
            - name: http
              containerPort: 8000
              protocol: TCP
          
          livenessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
          
          readinessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 5
            periodSeconds: 10
          
          resources:
            {{- toYaml .Values.backend.resources | nindent 12 }}
          
          volumeMounts:
            - name: config
              mountPath: /app/config.yaml
              subPath: config.yaml
            - name: logs
              mountPath: /var/log/modularmind
      
      volumes:
        - name: config
          configMap:
            name: {{ include "modularmind.fullname" . }}-config
        - name: logs
          {{- if .Values.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ include "modularmind.fullname" . }}-logs
          {{- else }}
          emptyDir: {}
          {{- end }}
      
      {{- with .Values.backend.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      
      {{- with .Values.backend.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      
      {{- with .Values.backend.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "modularmind.fullname" . }}-frontend
  labels:
    {{- include "modularmind.labels" . | nindent 4 }}
    app.kubernetes.io/component: frontend
spec:
  {{- if not .Values.frontend.autoscaling.enabled }}
  replicas: {{ .Values.frontend.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "modularmind.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: frontend
  template:
    metadata:
      annotations:
        {{- with .Values.frontend.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{- include "modularmind.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: frontend
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.frontend.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}-frontend
          securityContext:
            {{- toYaml .Values.frontend.securityContext | nindent 12 }}
          image: "{{ .Values.frontend.image.repository }}:{{ .Values.frontend.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.frontend.image.pullPolicy }}
          env:
            - name: VITE_APP_ENV
              value: {{ .Values.global.environment }}
            - name: VITE_API_URL
              value: {{ .Values.frontend.config.apiBaseUrl }}
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 10
            periodSeconds: 30
          readinessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 5
            periodSeconds: 10
          resources:
            {{- toYaml .Values.frontend.resources | nindent 12 }}
      {{- with .Values.frontend.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.frontend.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.frontend.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}